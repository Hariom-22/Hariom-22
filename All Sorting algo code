//Bouble_sort program...
/*public class Main
{
static void swap(int[] Arrs,int a,int b)
{
    int temp;
    temp=Arrs[a];
    Arrs[a]=Arrs[b];
    Arrs[b]=temp;
}
static void Bouble_sort(int[] Arrs,int n)
{
    for(int i=0;i<=n-1;i++)
    {
        for(int j=0;j<=n-1-i;j++)
        {
            if(Arrs[j]>Arrs[j+1])
                swap(Arrs,j,j+1);
        }
    }
}
	public static void main(String[] args) {
	    int[] Arrs={23,46,24,67,12,565,12,0,12,1,0,6,3,45,86,43};
	    int n=Arrs.length-1;
	    Bouble_sort(Arrs,n);
		System.out.println("Hello World");
		for(int i:Arrs)
	    System.out.println(i);
	}
}*/
//Section Sort program
/*public class Main
{
    static void swap(int[] Arrs,int a,int b) {
        int temp;
        temp=Arrs[a];
        Arrs[a]=Arrs[b];
        Arrs[b]=temp;
    }
    
    static void Selection_sort(int[] Arrs,int n) {
        for(int i=0;i<=n;i++) {
            int key=Arrs[i];
            int loc=i;
            for(int j=i+1;j<=n;j++){
                if(key>Arrs[j]) {
                    key=Arrs[j];
                    loc=j;
                }
            }
            swap(Arrs,i,loc);
        }
    }

	public static void main(String[] args) {
	    int[] Arrs={23,46,24,67,12,565,12,0,12,1,0,6,3,45,86,43};
	    int n=Arrs.length-1;
	    Selection_sort(Arrs,n);
		System.out.println("Hello World");
		for(int i:Arrs)
	    System.out.println(i);
	}
}*/
//Inserion Sort program
/*public class Main
{
    static void swap(int[] Arrs,int a,int b) {
        int temp;
        temp=Arrs[a];
        Arrs[a]=Arrs[b];
        Arrs[b]=temp;
    }
    
    static void Insertion_sort(int[] Arrs,int n) {
        int key,i,j; 
        for(i=1;i<=n;i++) {
            key=Arrs[i];
            for(j=i-1;j>=0 && key<Arrs[j];j--) {
                    Arrs[j+1]=Arrs[j];
            }
            Arrs[j+1]=key;
        }
    }

	public static void main(String[] args) {
	    int[] Arrs={23,46,24,67,12,565,12,0,12,1,0,6,3,45,86,43};
	    int n=Arrs.length-1;
	    Insertion_sort(Arrs,n);
		System.out.println("Hello World");
		for(int i:Arrs)
	    System.out.println(i);
	}
}*/
//Quick Sort program
/*public class Main
{
    static int count=0;
    static void swap(int[] Arrs,int a,int b) {
        int temp;
        temp=Arrs[a];
        Arrs[a]=Arrs[b];
        Arrs[b]=temp;
    }
    
    static int partition(int[] Arrs,int lb,int ub) {
          //count++;
        int pivot=Arrs[lb];
        int start=lb;
        int end=ub;
        while(start<end)
        {
            while(pivot>=Arrs[start] && start<ub)
                start++;
            while(pivot<Arrs[end] && end>=lb)
                end--;
            if(start<end)
                swap(Arrs,start,end);
        }
        swap(Arrs,lb,end);
        return end;
    }
    static void Quick_sort(int[] Arrs,int lb,int ub) {
        int loc;
        if(lb<ub)
        {
          //  count++;
            loc=partition(Arrs,lb,ub);
            Quick_sort(Arrs,lb,loc-1);
            Quick_sort(Arrs,loc+1,ub);
        }
    }

	public static void main(String[] args) {
	    int[] Arrs={23,46,24,67,12,565,12,0,12,1,0,6,3,45,454,5};
	    int n=Arrs.length-1;
	    Quick_sort(Arrs,0,n);
		System.out.println(Arrs.length+" Hello World "+count);
		for(int i:Arrs)
	    System.out.println(i);
	}
}*/
//Marge Sort program
/*public class Main
{
    static void Marge(int[] Arrs,int lb,int mid,int ub) {
        int i=lb;
        int k=lb;
        int j=mid+1;
        int [] Brrs=new int[Arrs.length];
        while(i<=mid && j<=ub) {
                if(Arrs[i]<=Arrs[j]) 
                    Brrs[k++]=Arrs[i++];
                else 
                    Brrs[k++]=Arrs[j++];
            }
        if(i>mid) 
                while(j<=ub) 
                    Brrs[k++]=Arrs[j++];
        else 
            while(i<=mid)
                Brrs[k++]=Arrs[i++];
        for(k=lb;k<=ub;k++)
            Arrs[k]=Brrs[k];
    }
    static void Marge_sort(int[] Arrs,int lb,int ub) {
        int mid;
        if(lb<ub) {
            mid=(lb+ub)/2;
            Marge_sort(Arrs,lb,mid);
            Marge_sort(Arrs,mid+1,ub);
            Marge(Arrs,lb,mid,ub);
        }
    }

	public static void main(String[] args) {
	    int[] Arrs={23,46,24,67,12,565,12,0,12,1,0,6,3,45,454,5};
	    int n=Arrs.length-1;
	    Marge_sort(Arrs,0,n);
		System.out.println(Arrs.length+" Hello World ");
		for(int i:Arrs)
	    System.out.println(i);
	}
}*/
/*public class Main
{
    static void Marge(int[] Arrs,int lb,int mid,int ub) {
        int i=lb;
        int k=lb;
        int j=mid+1;
        int [] Brrs=new int[Arrs.length];
        while(i<=mid && j<=ub) {
                if(Arrs[i]<=Arrs[j]) 
                    Brrs[k++]=Arrs[i++];
                else 
                    Brrs[k++]=Arrs[j++];
            }
        if(i>mid) 
                while(j<=ub) 
                    Brrs[k++]=Arrs[j++];
        else 
            while(i<=mid)
                Brrs[k++]=Arrs[i++];
        for(k=lb;k<=ub;k++)
            Arrs[k]=Brrs[k];
    }
    static void Marge_sort(int[] Arrs,int lb,int ub) {
        int mid;
        if(lb<ub) {
            mid=(lb+ub)/2;
            Marge_sort(Arrs,lb,mid);
            Marge_sort(Arrs,mid+1,ub);
            Marge(Arrs,lb,mid,ub);
        }
    }

	public static void main(String[] args) {
	    int[] Arrs={23,46,24,67,12,565,12,0,12,1,0,6,3,45,454,5};
	    int n=Arrs.length-1;
	    Marge_sort(Arrs,0,n);
		System.out.println(Arrs.length+" Hello World ");
		for(int i:Arrs)
	    System.out.println(i);
	}
}*/
//Bouble_sort program...
public class Main {
    static void swap(int[] Arrs,int a,int b) {
        int temp;
        temp=Arrs[a];
        Arrs[a]=Arrs[b];
        Arrs[b]=temp;
    }
    
    static void Heapify(int[] Arrs,int n,int i) {
        
        int largest=i;
        int left=(2*i)+1;
        int right=(2*i)+2;
        while(left<=n && Arrs[left]>Arrs[largest])
        {
            largest=left;
        }
        while(right<=n && Arrs[right]>Arrs[largest])
        {
            largest=right;
        }
        if(largest!=i)
        {
            swap(Arrs,i,largest);
            Heapify(Arrs,n,largest);
        }
        
    }
    
    static void Heap_sort(int[] Arrs,int n)
    {
        for(int i=n/2;i>=0;i--)
            {
                Heapify(Arrs,n,i);
            }
        for(int i=n;i>=0;i--)
        {
            swap(Arrs,0,i);
            Heapify(Arrs,i-1,0);
        }
    }
	public static void main(String[] args) {
	    int[] Arrs={23,46,24,67,12,565,12,0,12,1,0,6,3,45,86,43};
	    int n=Arrs.length-1;
	    Heap_sort(Arrs,n);
		System.out.println("Hello World");
		for(int i:Arrs)
	    System.out.println(i);
	}
}




